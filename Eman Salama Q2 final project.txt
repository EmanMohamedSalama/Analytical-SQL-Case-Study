Q2

with most_recent as ( select max( to_timestamp(invoicedate,'MM/DD/YYYY') ) as max_date from online_retail)
select *,
case when r_score =5 and fm_score =5 or r_score =5 and fm_score =4 or r_score =4 and fm_score =5 then 'Champions'
     when r_score =5 and fm_score =2 or r_score =4 and fm_score =2 or r_score =3 and fm_score =3 or r_score =4 and fm_score =3 then 'Potential Loyalists'
     when r_score =5 and fm_score =3 or r_score =4 and fm_score =4 or r_score =3 and fm_score =5 or r_score =3 and fm_score =4  then 'Loyal Customers'
     when r_score = 5 and fm_score = 1 then 'Recent Customers'
     when r_score in (3,4) and fm_score = 1 then 'Promising'
     when r_score =3 and fm_score =2 or r_score =2 and fm_score =3 or r_score =2 and fm_score =2 then 'Customers Needing Attention'
     when r_score =2 and fm_score =5 or r_score =2 and fm_score =4 or r_score =1 and fm_score =3 then 'At Risk'
     when r_score =1 and fm_score in (5,4) then 'Cant Lose Them'
     when r_score =1 and fm_score =2 then 'Hibernating'
     when r_score =1 and fm_score =1 then 'lost'
end as cust_segment
from 
    (select customerid,
    max_date - max( to_timestamp(invoicedate,'MM/DD/YYYY') )  as recency,
    count (distinct (invoiceno)) as frequency,
    sum(quantity*unitprice)as monetary,
    ntile(5) over( order by max_date - max(to_timestamp(invoicedate,'MM/DD/YYYY'))desc) as r_score,
    (ntile(5) over(order by count (distinct (invoiceno)) ) + ntile(5) over(order by sum(quantity*unitprice)))/2 as fm_score
    from online_retail,most_recent
    group by customerid ,max_date) as my_online_retail
order by monetary;